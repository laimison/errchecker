#!/bin/bash

echo "TOMCAT IS STARTING
error
exception
TOMCAT STARTED
TOMCAT IS STARTING
asd
TOMCAT IS STARTED
asd
asd
TOMCAT IS STARTING
asd
TOMCAT IS STARTED
TOMCAT IS STARTING
asd
TOMCAT IS STARTED
asd
asd
asd
asd
TOMCAT IS STARTING
asd
TOMCAT IS STARTED
asd
asd
asd" > /tmp/123

echo_var(){
  # These are manipulations called via xargs to write exception counts
  #if echo $1 | grep -q 'TOMCAT IS STARTING'
  #then
    echo $1 asd >> /tmp/4
  #fi

  #if echo $1 | grep -q 'TOMCAT IS STARTED'
  #then
    echo "EXCEPTIONS FOUND DURING THE STARTUP: `wc -l /tmp/1`" > /tmp/3
    > /tmp/1
  #fi

  #if echo $1 | grep -vq 'TOMCAT IS STARTING' | grep -vq 'TOMCAT IS STARTED'
  #then
    echo $1 asd >> /tmp/4
  #else
    #> /dev/null
    #if true
    #then
      # > /dev/null
      echo $1 a >> /tmp/4
    #fi
  #fi




#    case $1 in
#          generate)
#                  echo -n
#                  ;;
#          remove)
#                  echo -n 
#                  ;;
#          *)
#                  echo -n
#                  ;;
#    esac

  if [ "$1" == "TOMCAT IS STARTING" ]
  then
    echo -n
    # echo $1 asd >> /tmp/1
    echo 1 > /tmp/1
  else
    if [ "$1" == "TOMCAT IS STARTED" ]
    then
      echo -n
      # echo $1 a >> /tmp/1
      echo 1 > /tmp/1
    else
      echo -n
      echo 1 > /tmp/1
      echo "EXCEPTIONS FOUND DURING THE STARTUP: `wc -l /tmp/1 | awk -F ' ' '{print $1}'`" > /tmp/2
      # wc -l /tmp/1 > /tmp/2
      # awk 'END{print NR}' /tmp/1 > /tmp/2
      # sed -u -n \$= /tmp/1 > /tmp/2
      # grep --line-buffered [a-zA-Z] /tmp/1 > /tmp/2
      # grep [a-zA-Z] /tmp/1 > /tmp/2
      # cat /tmp/1 | awk 'END{print NR}' 2>/dev/null > /dev/null
      # tmp2=`cat /tmp/1`
      # tmp2=1
      # tmp2=`cat /tmp/1`
      # value=`echo $(($tmp2 + 1))`
    fi
  fi

  #Â Normal output
  echo $1 b
  return 0
}

export -f echo_var

# printf "1\n2\n3" | xargs -n 1 -P 10 -I {} bash -c 'echo_var "$@"' _ {}

# tail -f /tmp/123 | sed -u -n '/STARTING/,/STARTED/p' | xargs -I@ echo ok

sleep 1 && echo 'not needed' >> /tmp/123 && echo TOMCAT IS STARTING >> /tmp/123 && echo asd2 >> /tmp/123 && echo TOMCAT IS STARTED >> /tmp/123 && echo not needed >> /tmp/123 &

# xargs -P stands for --max-procs, max processes that are executed, in this scenario we must choose 1 to ensure lines are calculated correctly because of order
# xargs -n stands for --max-args, max arguments that can be passed, in this scenario we need 1
# xargs -I stands for replace-str, it takes line from standard input and can be reused for manipulations in a function
tail -f /tmp/123 | sed -u -n '/STARTING/,/STARTED/p' | xargs -n 1 -P 1 -I {} bash -c 'echo_var "$@"' _ {}

